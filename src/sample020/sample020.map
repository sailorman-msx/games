CHGMOD                          = $005F ; const, local, , sample020, , initialize.asm:7
SETGRP                          = $007E ; const, local, , sample020, , initialize.asm:8
ERAFNK                          = $00CC ; const, local, , sample020, , initialize.asm:11
GTSTCK                          = $00D5 ; const, local, , sample020, , initialize.asm:12
GTTRIG                          = $00D8 ; const, local, , sample020, , initialize.asm:13
SNSMAT                          = $0141 ; const, local, , sample020, , initialize.asm:15
KILBUF                          = $0156 ; const, local, , sample020, , initialize.asm:16
EXTROM                          = $015F ; const, local, , sample020, , initialize.asm:19
SETPLT                          = $014D ; const, local, , sample020, , initialize.asm:20
LINWID                          = $F3AF ; const, local, , sample020, , initialize.asm:23
RG0SAV                          = $F3DF ; const, local, , sample020, , initialize.asm:24
FORCLR                          = $F3E9 ; const, local, , sample020, , initialize.asm:25
BAKCLR                          = $F3EA ; const, local, , sample020, , initialize.asm:26
BDRCLR                          = $F3EB ; const, local, , sample020, , initialize.asm:27
CLIKSW                          = $F3DB ; const, local, , sample020, , initialize.asm:28
INTCNT                          = $FCA2 ; const, local, , sample020, , initialize.asm:29
H_TIMI                          = $FD9F ; const, local, , sample020, , initialize.asm:30
H_PHYDIO                        = $FFA7 ; const, local, , sample020, , initialize.asm:31
ISMSX1FLG                       = $002D ; const, local, , sample020, , initialize.asm:34
CALSLT                          = $001C ; const, local, , sample020, , initialize.asm:37
H_NMI                           = $015F ; const, local, , sample020, , initialize.asm:38
EXPTBL                          = $FCC1 ; const, local, , sample020, , initialize.asm:39
RSLREG                          = $0138 ; const, local, , sample020, , initialize.asm:42
ENASLT                          = $0024 ; const, local, , sample020, , initialize.asm:43
Header                          = $4000 ; addr, local, , sample020, , initialize.asm:51
Start                           = $4010 ; addr, local, , sample020, , initialize.asm:58
BiosCall                        = $4379 ; addr, local, , sample020, , interslotcall.asm:4
SetColorPalleteMSX1             = $4036 ; addr, local, , sample020, , initialize.asm:128
SkipColorPallete                = $407C ; addr, local, , sample020, , initialize.asm:183
ColorPalleteData                = $405C ; addr, local, , sample020, , initialize.asm:164
ColorPalleteSetLoop             = $4044 ; addr, local, , sample020, , initialize.asm:140
BiosNotFDDSubRomCall            = $437C ; addr, local, , sample020, , interslotcall.asm:16
WK_VRAM_SYNC                    = $C009 ; const, local, , sample020, , variable_define.asm:34
WK_GAMESTATUS                   = $C006 ; const, local, , sample020, , variable_define.asm:27
GameInitialize                  = $40BE ; addr, local, , sample020, , gameinit.asm:1
HTIMIHookLoop                   = $4086 ; addr, local, , sample020, , sample020.asm:8
VSYNC_WAIT_CNT                  = $C005 ; const, local, , sample020, , variable_define.asm:26
VSYNC_Wait                      = $408B ; addr, local, , sample020, , sample020.asm:17
StartGameMain                   = $4092 ; addr, local, , sample020, , sample020.asm:26
TitleDisplayProc                = $4257 ; addr, local, , sample020, , title.asm:5
GameMainProc                    = $417B ; addr, local, , sample020, , game.asm:1
DialogProc                      = $4254 ; addr, local, , sample020, , dialog.asm:5
GameOverProc                    = $425F ; addr, local, , sample020, , gameover.asm:1
NextHTIMIHook                   = $40B3 ; addr, local, , sample020, , sample020.asm:47
NORMAL_CHGMOD                   = $40EB ; addr, local, , sample020, , gameinit.asm:31
CALSLT_CHGMOD                   = $40DF ; addr, local, , sample020, , gameinit.asm:23
BiosInterSlotCall               = $4380 ; addr, local, , sample020, , interslotcall.asm:22
SetGraphic2                     = $40F3 ; addr, local, , sample020, , gameinit.asm:37
NORMAL_SETGRP2                  = $4105 ; addr, local, , sample020, , gameinit.asm:49
SetWidth32                      = $4108 ; addr, local, , sample020, , gameinit.asm:54
SetERAFNK                       = $410D ; addr, local, , sample020, , gameinit.asm:59
NORMAL_SETERAFNK                = $411F ; addr, local, , sample020, , gameinit.asm:71
SetCLIKSW                       = $4122 ; addr, local, , sample020, , gameinit.asm:75
WK_VALUE08                      = $C230 ; const, local, , sample020, , variable_define.asm:66
CreateCharacterPattern          = $45C7 ; addr, local, , sample020, , pcg_graphic2.asm:17
InitialPCGDatas                 = $46AF ; addr, local, , sample020, , pcg_graphic2.asm:253
MemFil                          = $43B7 ; addr, local, , sample020, , common.asm:11
GameInitialStartGame            = $4153 ; addr, local, , sample020, , gameinit.asm:109
WK_SPRITE0_NUM                  = $C021 ; const, local, , sample020, , variable_define.asm:44
InitRandom                      = $4427 ; addr, local, , sample020, , common.asm:153
ClearScreen                     = $482F ; addr, local, , sample020, , vram.asm:427
CreateSpritePattern             = $4515 ; addr, local, , sample020, , sprite.asm:11
WK_ANGLE                        = $C241 ; const, local, , sample020, , variable_define.asm:90
WK_ANIME_PTN                    = $C223 ; const, local, , sample020, , variable_define.asm:47
WK_REDRAW_FINE                  = $C00A ; const, local, , sample020, , variable_define.asm:35
INIT_H_TIMI_HANDLER             = $4871 ; addr, local, , sample020, , interval.asm:14
WK_TIME05                       = $C008 ; const, local, , sample020, , variable_define.asm:31
GameMainProcEnd                 = $4251 ; addr, local, , sample020, , game.asm:276
ResetAngle                      = $418D ; addr, local, , sample020, , game.asm:22
SkipResetAngle                  = $418E ; addr, local, , sample020, , game.asm:27
TRIGFUNC_TBL                    = $48ED ; addr, local, , sample020, , data_trigono.asm:38
WK_VALUE01                      = $C229 ; const, local, , sample020, , variable_define.asm:59
SkipSetMinusFlagY               = $41B6 ; addr, local, , sample020, , game.asm:75
SetIntMulti64Y                  = $41C7 ; addr, local, , sample020, , game.asm:100
PointMulti64Y                   = $41C0 ; addr, local, , sample020, , game.asm:89
CalcMulti                       = $446A ; addr, local, , sample020, , common.asm:257
JudgeYMinus                     = $41CE ; addr, local, , sample020, , game.asm:112
SetPOSY                         = $41D8 ; addr, local, , sample020, , game.asm:123
WK_POSY                         = $C243 ; const, local, , sample020, , variable_define.asm:92
SkipSetMinusFlagX               = $41FA ; addr, local, , sample020, , game.asm:165
SetIntMulti64X                  = $420B ; addr, local, , sample020, , game.asm:190
PointMulti64X                   = $4204 ; addr, local, , sample020, , game.asm:179
JudgeXMinus                     = $4212 ; addr, local, , sample020, , game.asm:202
SetPOSX                         = $421C ; addr, local, , sample020, , game.asm:213
WK_POSX                         = $C242 ; const, local, , sample020, , variable_define.asm:91
WK_SPRITE_MOVETBL               = $C023 ; const, local, , sample020, , variable_define.asm:46
ResetAnimeNum                   = $423E ; addr, local, , sample020, , game.asm:248
SetColorNum                     = $423F ; addr, local, , sample020, , game.asm:252
SetVirtAttrTable                = $4550 ; addr, local, , sample020, , sprite.asm:81
ShuffleSprite                   = $4594 ; addr, local, , sample020, , sprite.asm:160
WK_SPRREDRAW_FINE               = $C022 ; const, local, , sample020, , variable_define.asm:45
KeyInputProc                    = $4262 ; addr, local, , sample020, , keyinput.asm:21
WK_PLAYERDIST                   = $C225 ; const, local, , sample020, , variable_define.asm:51
KeyInputProcCheckZkey           = $426D ; addr, local, , sample020, , keyinput.asm:34
KeyInputProcZup                 = $4281 ; addr, local, , sample020, , keyinput.asm:54
WK_TRIGGERA                     = $C226 ; const, local, , sample020, , variable_define.asm:52
KeyInputProc_IsCURSOR           = $4318 ; addr, local, , sample020, , keyinput.asm:180
KeyInputProcZpress              = $4279 ; addr, local, , sample020, , keyinput.asm:46
KeyInputProcCheckXKey           = $429A ; addr, local, , sample020, , keyinput.asm:75
KeyInputProcZupStep2            = $4291 ; addr, local, , sample020, , keyinput.asm:66
KeyInputProcXup                 = $42B1 ; addr, local, , sample020, , keyinput.asm:96
WK_TRIGGERB                     = $C227 ; const, local, , sample020, , variable_define.asm:53
KeyInputProcXpress              = $42A9 ; addr, local, , sample020, , keyinput.asm:88
KeyInputProc_IsAbutton          = $42BE ; addr, local, , sample020, , keyinput.asm:107
KeyInputProcAup                 = $42D6 ; addr, local, , sample020, , keyinput.asm:127
KeyInputProcApress              = $42CE ; addr, local, , sample020, , keyinput.asm:119
KeyInputProc_IsAupStep2         = $42E6 ; addr, local, , sample020, , keyinput.asm:139
KeyInputProc_IsBbutton          = $42F3 ; addr, local, , sample020, , keyinput.asm:150
KeyInputProcBup                 = $430B ; addr, local, , sample020, , keyinput.asm:170
KeyInputProcBpress              = $4303 ; addr, local, , sample020, , keyinput.asm:162
WK_KEYIN_INTERVAL               = $C224 ; const, local, , sample020, , variable_define.asm:50
KeyInputProc_End                = $4375 ; addr, local, , sample020, , keyinput.asm:282
KeyInputProcSetInterval5        = $432D ; addr, local, , sample020, , keyinput.asm:198
KeyInputProcSetInterval         = $432F ; addr, local, , sample020, , keyinput.asm:203
KeyInputProc_KeyInEnd           = $4343 ; addr, local, , sample020, , keyinput.asm:231
KeyInputProc_IsJOYSTICK         = $433A ; addr, local, , sample020, , keyinput.asm:218
KeyInputProc_KeyEndAdjTRIGAOff  = $4355 ; addr, local, , sample020, , keyinput.asm:245
KeyInputProc_KeyEndAdjSTCK      = $4356 ; addr, local, , sample020, , keyinput.asm:249
KeyInputProc_Judge4             = $435D ; addr, local, , sample020, , keyinput.asm:257
KeyInputProc_Judge6             = $4364 ; addr, local, , sample020, , keyinput.asm:264
KeyInputProc_Judge8             = $436B ; addr, local, , sample020, , keyinput.asm:271
KeyInputProc_SetDist            = $4372 ; addr, local, , sample020, , keyinput.asm:278
BiosCallNotFDD                  = $437B ; addr, local, , sample020, , interslotcall.asm:10
BiosFDDSubRomCall               = $4389 ; addr, local, , sample020, , interslotcall.asm:35
MemFilLoop                      = $43B7 ; addr, local, , sample020, , common.asm:13
MemCpy                          = $43BE ; addr, local, , sample020, , common.asm:29
MemCpyLoop                      = $43BE ; addr, local, , sample020, , common.asm:31
IntMemCpy                       = $43C7 ; addr, local, , sample020, , common.asm:49
IntMemCpyLoop                   = $43C7 ; addr, local, , sample020, , common.asm:51
SortValues                      = $43D0 ; addr, local, , sample020, , common.asm:67
WK_SORTVALUE01                  = $C232 ; const, local, , sample020, , variable_define.asm:70
SortValuesLoop1                 = $43E1 ; addr, local, , sample020, , common.asm:94
WK_SORTVALUE02                  = $C233 ; const, local, , sample020, , variable_define.asm:71
SortValuesLoop2                 = $43E9 ; addr, local, , sample020, , common.asm:103
WK_SORTVALUE04                  = $C235 ; const, local, , sample020, , variable_define.asm:73
WK_SORTVALUE03                  = $C234 ; const, local, , sample020, , variable_define.asm:72
SortValuesLoop2Next             = $440C ; addr, local, , sample020, , common.asm:125
SortValuesLoop2Swap             = $4400 ; addr, local, , sample020, , common.asm:118
SortValuesEnd                   = $4426 ; addr, local, , sample020, , common.asm:144
WK_RANDOM_VALUE                 = $C231 ; const, local, , sample020, , variable_define.asm:67
RandomValue                     = $442E ; addr, local, , sample020, , common.asm:160
AbsA                            = $4442 ; addr, local, , sample020, , common.asm:187
Divide                          = $4447 ; addr, local, , sample020, , common.asm:207
DivLoop                         = $444F ; addr, local, , sample020, , common.asm:213
DivideBy8                       = $4455 ; addr, local, , sample020, , common.asm:225
CalcMulti1                      = $4472 ; addr, local, , sample020, , common.asm:270
CalcMulti2                      = $4476 ; addr, local, , sample020, , common.asm:294
NumToStr                        = $447B ; addr, local, , sample020, , common.asm:313
WK_STRINGBUF                    = $C23A ; const, local, , sample020, , variable_define.asm:80
WK_NUMTOCHARVAL                 = $C01D ; const, local, , sample020, , variable_define.asm:39
NumToStr1thPlace                = $44D1 ; addr, local, , sample020, , common.asm:385
NumToStr10thPlace               = $44B0 ; addr, local, , sample020, , common.asm:360
NumToStr100thPlace              = $4494 ; addr, local, , sample020, , common.asm:339
NumToStrEnd                     = $44D8 ; addr, local, , sample020, , common.asm:392
GetString                       = $44DC ; addr, local, , sample020, , common.asm:408
GetStingLoop                    = $44F1 ; addr, local, , sample020, , common.asm:433
GetStringLoopEnd                = $44FC ; addr, local, , sample020, , common.asm:446
GetStringByIndex                = $4501 ; addr, local, , sample020, , common.asm:478
GetStringByIndexLoop            = $4505 ; addr, local, , sample020, , common.asm:486
WRTVRMFIL                       = $4779 ; addr, local, , sample020, , vram.asm:175
SPRPTN                          = $49ED ; addr, local, , sample020, , data_sprite.asm:6
WRTVRMSERIAL                    = $4796 ; addr, local, , sample020, , vram.asm:218
InitializeVirtSpritePattern     = $453B ; addr, local, , sample020, , sprite.asm:47
WK_SHUFFLE_ATTRTBL              = $CF00 ; const, local, , sample020, , variable_define.asm:102
InitializeVirtSpritePatternLoop1 = $4540 ; addr, local, , sample020, , sprite.asm:60
WK_HLREGBACK                    = $C23B ; const, local, , sample020, , variable_define.asm:83
SetVirtAttrTableShuffleProc     = $4556 ; addr, local, , sample020, , sprite.asm:86
SetVirtAttrTableLoop            = $4561 ; addr, local, , sample020, , sprite.asm:95
SetVirtAttrTableSet209          = $456D ; addr, local, , sample020, , sprite.asm:110
SetVirtAttrTableSetY            = $456F ; addr, local, , sample020, , sprite.asm:114
SetVirtAttrTableLoopEndNextData = $4584 ; addr, local, , sample020, , sprite.asm:139
SetVirtAttrTableLoopEnd         = $4593 ; addr, local, , sample020, , sprite.asm:150
WK_VIRT_SPRATTRTBL              = $D300 ; const, local, , sample020, , variable_define.asm:125
ShuffleSpriteLoop               = $459F ; addr, local, , sample020, , sprite.asm:182
WK_BCREGBACK                    = $C23F ; const, local, , sample020, , variable_define.asm:85
CreateCharaPtnHiragana          = $45D7 ; addr, local, , sample020, , pcg_graphic2.asm:32
CHRPTN_NUMALPHA                 = $4B28 ; addr, local, , sample020, , data_pcg.asm:76
WK_CHARDATAADR                  = $C01E ; const, local, , sample020, , variable_define.asm:40
CreateCharacterPatternLoop      = $45E9 ; addr, local, , sample020, , pcg_graphic2.asm:49
CreateCharaPtnTiles             = $45E3 ; addr, local, , sample020, , pcg_graphic2.asm:44
CHRPTN_HIRAGANA                 = $4C7F ; addr, local, , sample020, , data_pcg.asm:159
CHRPTN                          = $4A6D ; addr, local, , sample020, , data_pcg.asm:10
CreateCharacterPatternEnd       = $46A2 ; addr, local, , sample020, , pcg_graphic2.asm:223
WK_CHARCODE                     = $C020 ; const, local, , sample020, , variable_define.asm:41
GetCharacterVRAMAddress         = $46A3 ; addr, local, , sample020, , pcg_graphic2.asm:232
ColorNumAlpha                   = $4641 ; addr, local, , sample020, , pcg_graphic2.asm:134
SetColorDatas                   = $4653 ; addr, local, , sample020, , pcg_graphic2.asm:148
ColorHiragana                   = $464D ; addr, local, , sample020, , pcg_graphic2.asm:143
CHRPTN_NUMALPHA_COLOR           = $4B18 ; addr, local, , sample020, , data_pcg.asm:68
CHRPTN_HIRAGANA_COLOR           = $4B20 ; addr, local, , sample020, , data_pcg.asm:72
NextNotTiles                    = $4694 ; addr, local, , sample020, , pcg_graphic2.asm:210
NextDataPattern                 = $4697 ; addr, local, , sample020, , pcg_graphic2.asm:214
WK_UNIONRAM                     = $C800 ; const, local, , sample020, , variable_define.asm:17
REDVRMSERIAL                    = $4759 ; addr, local, , sample020, , vram.asm:128
VDPRED                          = $4718 ; addr, local, , sample020, , vram.asm:13
CONST_VDPPORT1                  = $0099 ; const, local, , sample020, , variable_define.asm:11
VDPWRT                          = $472C ; addr, local, , sample020, , vram.asm:44
REDVRM                          = $4746 ; addr, local, , sample020, , vram.asm:85
CONST_VDPPORT0                  = $0098 ; const, local, , sample020, , variable_define.asm:10
WRTVRM                          = $474E ; addr, local, , sample020, , vram.asm:103
REDVRMSERIAL_End                = $4777 ; addr, local, , sample020, , vram.asm:163
REDVRMSERIALLOOP                = $476B ; addr, local, , sample020, , vram.asm:149
WRTVRMFIL_End                   = $4794 ; addr, local, , sample020, , vram.asm:204
WRTVRMFILLOOP                   = $4789 ; addr, local, , sample020, , vram.asm:191
WRTVRMSERIAL_End                = $47B4 ; addr, local, , sample020, , vram.asm:253
WRTVRMSERIALLOOP                = $47A8 ; addr, local, , sample020, , vram.asm:239
GetVRAM4x4                      = $47B6 ; addr, local, , sample020, , vram.asm:285
WK_CHECKPOSY                    = $C00C ; const, local, , sample020, , variable_define.asm:37
WK_CHECKPOSX                    = $C00B ; const, local, , sample020, , variable_define.asm:36
WK_VIRT_PTNNAMETBL              = $D000 ; const, local, , sample020, , variable_define.asm:114
WK_VRAM4X4_TBL                  = $C00D ; const, local, , sample020, , variable_define.asm:38
ClearSprite                     = $483B ; addr, local, , sample020, , vram.asm:442
ClearSpriteLoop                 = $4844 ; addr, local, , sample020, , vram.asm:451
ClearSpriteEnd                  = $4851 ; addr, local, , sample020, , vram.asm:466
PutSprite                       = $4857 ; addr, local, , sample020, , vram.asm:480
PutPatternNameTable             = $4864 ; addr, local, , sample020, , vram.asm:494
H_TIMI_BACKUP                   = $C000 ; const, local, , sample020, , variable_define.asm:25
H_TIMI_HANDLER                  = $4892 ; addr, local, , sample020, , interval.asm:48
H_TIMI_HANDLER_L1               = $489D ; addr, local, , sample020, , interval.asm:64
IntervalEnd                     = $48E8 ; addr, local, , sample020, , interval.asm:136
SkipPutSprite                   = $48B2 ; addr, local, , sample020, , interval.asm:80
SkipDecTime05                   = $48CC ; addr, local, , sample020, , interval.asm:105
SetTime05                       = $48C2 ; addr, local, , sample020, , interval.asm:96
DecTime05End                    = $48C9 ; addr, local, , sample020, , interval.asm:102
SkipRedrawScreen                = $48DB ; addr, local, , sample020, , interval.asm:118
SetBlankScreen                  = $48DC ; addr, local, , sample020, , interval.asm:122
SetBlankScreenFull              = $48DE ; addr, local, , sample020, , interval.asm:126
__head                          = $4000 ; const, public, def, , ,
__tail                          = $4E42 ; const, public, def, , ,
__size                          = $0E42 ; const, public, def, , ,
