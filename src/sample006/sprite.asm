;--------------------------------------------
; スプライト関連の処理
;--------------------------------------------

;--------------------------------------------
; SUB-ROUTINE: CreateSpritePattern
; スプライトパターンをVRAMに書き込む
;--------------------------------------------
CreateSpritePattern:

    ;--------------------------------------------
    ; スプライトパターンデータをVRAMの
    ; スプライトパターンジェネレータテーブルに
    ; 転送する
    ;--------------------------------------------
    ld hl, SPRPTN
    ld de, $3800   ; スプライトパターンのVRAM先頭アドレスは3800H
    ld bc, 64      ; 1体あたり64バイト
    call LDIRVM
    
    ret

;--------------------------------------------
; SUB-ROUTINE: PutSprite
; WK_PLAYERPOSX, WK_PLAYERPOSYの値から
; 256x192単位のグラフィック座標を計算して
; 計算した場所にスプライトを表示する
;--------------------------------------------
PutSprite:

    ;--------------------------------------------
    ; スプライトアトトリビュートテーブルは次の
    ; ようになっている
    ;
    ; 例
    ; 1B00H-1B03H : スプライト番号#0
    ; 1B04H-1B07H : スプライト番号#1
    ; :
    ; というように4バイトごとにスプライト番号が付いている
    ;
    ; スプライトパターン番号とスプライト番号は異なる
    ; 例
    ; スプライト番号#0を構成するスプライトパターン番号は#0-#3
    ; スプライト番号#1を構成するスプライトパターン番号は#4-#7
    ;
    ; 以下、アトリビュートテーブルの詳細
    ;
    ; 1B00H : スプライト#0のY座標
    ; 1B01H : スプライト#0のX座標
    ; 1B02H : スプライト#0のパターン番号
    ; 1B03H : スプライト#0カラーコード
    ;
    ; 1B04H : スプライト#1のY座標
    ; 1B05H : スプライト#1のX座標
    ; 1B06H : スプライト#1のパターン番号
    ; 1B07H : スプライト#1カラーコード
    ;  :
    ; 
    ; パターン番号のいちばん低いスプライトが優先表示される
    ; スプライトが画面水平に重なると5個め以降のスプライトの
    ; 重なっているスプライト面は非表示となる
    ;--------------------------------------------

    ;-----------------------------------------------------------
    ; 1枚目のスプライトのアトリビュートを設定する
    ;-----------------------------------------------------------

    ;--------------------------------------------
    ; Y座標の計算
    ; WK_PLAYERPOSYに8倍した値がグラフィック座標
    ; Y座標は0-192の値
    ;--------------------------------------------
    ld hl, 0
    ld a, (WK_PLAYERPOSY)
    ld e, a
    ld h, 8
    call CalcMulti

    ld a, l; 計算したY座標をAレジスタに格納する

    ; VRAMのY座標に書き込む
    ld hl, $1B00
    call WRTVRM

    ;--------------------------------------------
    ; X座標の計算
    ; WK_PLAYERPOSXに8倍した値がグラフィック座標
    ; X座標は0-255の値
    ;--------------------------------------------
    ld hl, 0
    ld a, (WK_PLAYERPOSX)
    ld e, a
    ld h, 8
    call CalcMulti

    ld a, l; 計算したX座標をAレジスタに格納する

    ;--------------------------------------------
    ; VRAMのスプライトアトリビュートテーブルの
    ; X座標にグラッフィック座標を格納する
    ;--------------------------------------------
    ld hl, $1B01
    call WRTVRM
    
    ;--------------------------------------------
    ; VRAMのスプライトアトリビュートテーブルの
    ; パターン番号とカラーを設定する
    ;--------------------------------------------
    ld  a, 0     ; 表示するパターン番号
    ld hl, $1B02
    call WRTVRM

    ld  a, $0D   ; 表示色
    ld hl, $1B03
    call WRTVRM

    ;-----------------------------------------------------------
    ; 2枚目のスプライトのアトリビュートを設定する
    ;-----------------------------------------------------------

    ;--------------------------------------------
    ; Y座標の計算
    ; WK_PLAYERPOSYに8倍した値がグラフィック座標
    ; Y座標は0-192の値
    ;--------------------------------------------
    ld hl, 0
    ld a, (WK_PLAYERPOSY)
    ld e, a
    ld h, 8
    call CalcMulti

    ld a, l; 計算したX座標をAレジスタに格納する

    ; VRAMのY座標に書き込む
    ld hl, $1B04
    call WRTVRM

    ;--------------------------------------------
    ; X座標の計算
    ; WK_PLAYERPOSXに8倍した値がグラフィック座標
    ; X座標は0-255の値
    ;--------------------------------------------
    ld hl, 0
    ld a, (WK_PLAYERPOSX)
    ld e, a
    ld h, 8
    call CalcMulti

    ld a, l; 計算したX座標をAレジスタに格納する

    ;--------------------------------------------
    ; VRAMのスプライトアトリビュートテーブルの
    ; X座標にグラッフィック座標を格納する
    ;--------------------------------------------
    ld hl, $1B05
    call WRTVRM
    
    ;--------------------------------------------
    ; VRAMのスプライトアトリビュートテーブルの
    ; パターン番号とカラーを設定する
    ;--------------------------------------------
    ld  a, 4     ; 表示するパターン番号
    ld hl, $1B06
    call WRTVRM

    ld  a, $0F   ; 表示色
    ld hl, $1B07
    call WRTVRM

    ret
